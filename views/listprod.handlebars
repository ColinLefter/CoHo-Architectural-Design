<div class="bg-white dark:bg-black">
  <div class="mx-auto max-w-7xl px-4 py-24 sm:px-6 sm:py-8 lg:px-8">
    <h1 class="text-3xl font-bold tracking-tight text-black dark:text-white">Product Catalogue</h1>

    <div style="margin-top: 20px;"> <!-- Adding space -->

    <!-- Container for both search and product list -->
    <div class="flex flex-col gap-6">

      <!-- Search Form -->
      <form action="/listprod" method="get" class="w-full">
        <div class="flex items-center">
          <!-- Search Input -->
          <input type="text" name="productName" placeholder="Search for a product" class="border-2 rounded-lg p-2 flex-grow dark:bg-black dark:text-white border-gray-300 dark:border-white" value="{{searchValue}}">

          <!-- Buttons -->
          <div class="ml-2 flex items-center space-x-2">
            <div class="flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 sm:max-w-md">
              <input type="submit" value="Submit" class="border-2 rounded-lg p-2 flex-grow dark:bg-black dark:text-white border-gray-300 dark:border-white">
            </div>
            <div class="flex rounded-md shadow-sm ring-1 ring-inset ring-gray-300 focus-within:ring-2 focus-within:ring-inset focus-within:ring-indigo-600 sm:max-w-md">
              <input type="reset" value="Reset" class="border-2 rounded-lg p-2 flex-grow dark:bg-black dark:text-white border-gray-300 dark:border-white">
            </div>
          </div>
        </div>
      </form>

      <h2 class="text-2xl font-bold tracking-tight text-black dark:text-white">All Products</h2>

      <!-- Product List -->
      <div class="divide-y divide-gray-200">
        {{#each products}}
          <div class="flex items-center py-4">
            <!-- Product Image -->
            <div class="flex-shrink-0 w-32 h-32">
              <img src="{{displayOne}}" alt="{{productName}}" class="h-full w-full object-cover rounded-lg">
            </div>
            <!-- Product Details -->
            <div class="ml-4 flex-grow">
              <!-- Product Title with Clickable Link -->
              <a href="/product?id={{productId}}&name={{productName}}&price={{productPrice}}&productDesc={{productDesc}}" class="text-lg font-bold dark:text-white hover:text-blue-600">
                <h3>{{productName}}</h3>
              </a>
              <p class="text-gray-500 dark:text-white">{{categoryName}}</p>
              <p class="text-gray-500 dark:text-white">{{formattedPrice}}</p>
            </div>
            <!-- Add to Cart Form -->
            <form id="addCartForm_{{productId}}" class="mt-10" action="/addcart" method="get" data-product-id="{{productId}}">
              <input type="hidden" name="id" value="{{productId}}">
              <input type="hidden" name="name" value="{{productName}}">
              <input type="hidden" name="price" value="{{productPrice}}">
              <button type="submit" class="mt-10 flex items-center justify-center rounded-md border border-transparent bg-indigo-600 px-8 py-3 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">Add to cart</button>
              <span class="item-count">0</span>
            </form>
          </div>
        {{/each}}
      </div>
      <script>
        const productItemCounts = {}; // Object to keep track of item counts for each product

        document.addEventListener('DOMContentLoaded', function () {
          const addToCartForms = document.querySelectorAll('form[id^="addCartForm_"]');

          addToCartForms.forEach(form => {
            const productId = form.getAttribute('data-product-id');
            const itemCountSpan = form.querySelector('.item-count'); // Get the item count span within this form

            form.addEventListener('submit', function (e) {
              e.preventDefault();

              let formData = new FormData(this);
              let queryParams = new URLSearchParams(formData).toString();
              let fetchUrl = '/addcart?' + queryParams;
              let button = this.querySelector('button');

              fetch(fetchUrl)
                .then(response => {
                  if (response.ok) {
                    if (!productItemCounts[productId]) {
                      productItemCounts[productId] = 1;
                    } else {
                      productItemCounts[productId]++;
                    }

                    itemCountSpan.textContent = productItemCounts[productId]; // Update the item count span within this form
                    button.textContent = 'In cart: ' + productItemCounts[productId]; // Update button text
                  } else {
                    // Handle response error
                    console.error('Error:', response.statusText);
                    button.textContent = 'Error adding to cart';
                  }
                })
                .catch(error => {
                  console.error('Error:', error);
                  button.textContent = 'Error adding to cart';
                });
            });
          });
        });
      </script>
    </div>
</div>